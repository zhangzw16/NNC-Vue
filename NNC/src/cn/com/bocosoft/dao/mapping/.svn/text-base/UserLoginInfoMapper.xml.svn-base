<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.bocosoft.dao.UserLoginInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.com.bocosoft.model.UserLoginInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="login_id" property="loginId" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="login_flag" property="loginFlag" jdbcType="INTEGER" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, login_id, passwd, login_flag, create_id, create_time, update_id, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_login_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_login_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.bocosoft.model.UserLoginInfo" >
    insert into user_login_info (id, login_id, passwd, login_flag,
      create_id, create_time, update_id, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{loginId,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, #{loginFlag,jdbcType=INTEGER},
      #{createId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.bocosoft.model.UserLoginInfo" >
    insert into user_login_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="loginFlag != null" >
        login_flag,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="loginFlag != null" >
        #{loginFlag,jdbcType=INTEGER},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.bocosoft.model.UserLoginInfo" >
    update user_login_info
    <set >
      <if test="loginId != null" >
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="loginFlag != null" >
        login_flag = #{loginFlag,jdbcType=INTEGER},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.bocosoft.model.UserLoginInfo" >
    update user_login_info
    set login_id = #{loginId,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      login_flag = #{loginFlag,jdbcType=INTEGER},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="getUserLoginInfo" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM
    user_login_info
    WHERE user_login_info.id = #{userLoginInfoId,jdbcType=INTEGER}
  </select>
  <insert id="userLonginInfoSave" parameterType="cn.com.bocosoft.model.UserLoginInfo" >
    insert into user_login_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="loginFlag != null" >
        login_flag,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime == null" >
        create_time,
      </if>
      <if test="createId == null" >
        create_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="loginFlag != null" >
        #{loginFlag,jdbcType=INTEGER},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
	  <if test="createTime == null" >
         now(),
      </if>
      <if test="createId == null" >
         1,
      </if>
    </trim>
  </insert>
  <select id="findByLoginUser" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT 
    <include refid="Base_Column_List" />
    FROM
    user_login_info
    WHERE user_login_info.login_id = #{loginId,jdbcType=VARCHAR}
  </select>
  <select id="findUserLoginInfoByPhone" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT 
    <include refid="Base_Column_List" />
    FROM
    user_login_info
    WHERE user_login_info.login_id = #{phoneNo,jdbcType=VARCHAR}
  </select>
  <select id="getAllUserInfoLoginCount" resultType="java.lang.Integer">
    SELECT 
    COUNT(*)
    FROM
    user_login_info
  </select>
  <select id="getLoginUserByLoginIdAndPwd" resultMap="BaseResultMap">
    SELECT 
    <include refid="Base_Column_List" />
    FROM
    user_login_info
    WHERE user_login_info.login_id = ${phoneNo}
    AND user_login_info.passwd = ${passwd}
  </select>
</mapper>